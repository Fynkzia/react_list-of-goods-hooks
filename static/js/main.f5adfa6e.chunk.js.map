{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","visibleGoods","goods","ALPHABET","sort","firstGood","secondGood","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","resetVisibility","className","type","cn","onClick","prev","map","name","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0EAZQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAEGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA4CE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAmBH,EAASM,MAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EApCD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENK,EAAY,YAAOC,GAEzB,OAAQH,GACN,KAAKP,EAASW,SACZF,EAAaG,MAAK,SAACC,EAAWC,GAAZ,OAChBD,EAAUE,cAAcD,MAE1B,MAEF,KAAKd,EAASgB,OACZP,EAAaG,MAAK,SAACC,EAAWC,GAAZ,OAChBD,EAAUI,OAASH,EAAWG,UAepC,OAPIb,GACFK,EAAaS,UAIfC,QAAQC,IAAIb,EAAUH,GAEfK,EAMcY,CACnBpB,EACA,CAAEG,aAAYG,aAEVe,EAAmBf,IAAaP,EAASM,MAASF,EAmBxD,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYlB,IAAaP,EAASW,WAEtCe,QA1BmB,WACzBlB,EAAYR,EAASW,WAmBjB,iCAWA,wBACEa,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYlB,IAAaP,EAASgB,SAEtCU,QAjCiB,WACvBlB,EAAYR,EAASgB,SA0BjB,4BAWA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAarB,IAEjBsB,QAxCc,WACpBrB,GAAc,SAAAsB,GAAI,OAAKA,MAiCnB,qBAWCL,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA7CU,WAClBrB,GAAc,GACdG,EAAYR,EAASM,OAwCf,sBAUJ,oBAAIiB,UAAU,yDAAd,SACGd,EAAamB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCrInBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f5adfa6e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((firstGood, secondGood) => (\n        firstGood.localeCompare(secondGood)\n      ));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((firstGood, secondGood) => (\n        firstGood.length - secondGood.length\n      ));\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState<SortType>(SortType.NONE);\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { isReversed, sortType },\n  );\n  const resetVisibility = (sortType !== SortType.NONE) || isReversed;\n\n  const handleSortAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const handleSortLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleReverse = () => {\n    setIsReversed(prev => !prev);\n  };\n\n  const handleReset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={handleSortAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={handleSortLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {resetVisibility && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul className=\"block-list is-small is-outlined is-success is-centered\">\n        {visibleGoods.map(name => (\n          <li key={name} data-cy=\"Good\">{name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}